/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/outputs.h>
#include "keymap_italian.h"

// Layer definitions
#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6
// -----------------

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1800  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 30    // default: 10

&sk {
	// don't release mods on other mods presses
	ignore-modifiers;
};


/ {
    behaviors {
        // --- Makros ---

        macro_0: macro0 {
            compatible = "zmk,behavior-macro";
            bindings = <&kp RA(Q)>;
            #binding-cells = <0>;
            label = "macro0";
        };

        macro_1: macro1 {
            compatible = "zmk,behavior-macro";
            bindings = <&kp RA(P)>;
            #binding-cells = <0>;
        };

        macro_2: macro2 {
            compatible = "zmk,behavior-macro";
            bindings = <&kp RA(Y)>;
            #binding-cells = <0>;
        };

        macro_3: macro3 {
            compatible = "zmk,behavior-macro";
            bindings = <&kp RA(S)>;
            #binding-cells = <0>;
        };

        viout: viout {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp COLON &kp W &kp Q &kp ENTER>;
            label = "VIOUT";
        };

        macae: macae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp A>;
            label = "MACAE";
        };

        macaeupper: macaeupper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp LS(A)>;
            label = "MACAEUPPER";
        };

        macue: macue {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp U>;
            label = "MACUE";
        };

        macueupper: macueupper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp LS(U)>;
            label = "MACUEUPPER";
        };

        macoe: macoe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp O>;
            label = "MACOE";
        };

        macoeupper: macoeupper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp LS(O)>;
            label = "MACOEUPPER";
        };

        schwedischumlaut: schwedischumlaut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(W)>;
            label = "SCHWEDISCHUMLAUT";
        };

       // --- Tap Dance ---

        td_0: behavior_tap_dance0 {
            compatible = "zmk,behavior-tap-dance";
            tapping-term-ms = <190>;
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp LEFT_GUI>, <&kp LEFT_ALT>;
        };

        td_1: behavior_tap_dance1 {
            compatible = "zmk,behavior-tap-dance";
            tapping-term-ms = <120>;
            #binding-cells = <0>;
            bindings = <&kp S>, <&macro_3>;
        };

        td_2: behavior_tap_dance2 {
            compatible = "zmk,behavior-tap-dance";
            tapping-term-ms = <170>;
            bindings = <&kp A>, <&macro_0>;

            #binding-cells = <0>;
        };

        td_3: behavior_tap_dance3 {
            compatible = "zmk,behavior-tap-dance";
            tapping-term-ms = <130>;
            bindings = <&kp O>, <&macro_1>;

            #binding-cells = <0>;
        };

        td_4: behavior_tap_dance4 {
            compatible = "zmk,behavior-tap-dance";
            tapping-term-ms = <140>;
            bindings = <&kp U>, <&macro_2>;

            #binding-cells = <0>;
        };

        td_5: td_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_5";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp LC(BACKSPACE)>;

            tapping-term-ms = <130>;
        };

        td_ae: td_ae {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_AE";
            #binding-cells = <0>;
            bindings = <&macae>, <&macaeupper>;
        };

        td_ue: td_ue {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_UE";
            #binding-cells = <0>;
            bindings = <&macue>, <&macueupper>;
        };

        td_oe: td_oe {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_OE";
            #binding-cells = <0>;
            bindings = <&macoe>, <&macoeupper>;
        };

        td_ao: td_ao {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_AO";
            #binding-cells = <0>;
            bindings = <&kp I>, <&schwedischumlaut>;

            tapping-term-ms = <170>;
        };
    };

	macros {
		// sometimes my device thinks a modifier is being held down
		// pressing all modifiers fixes it.
		unstick: unstick {
			label = "ZM_unstick";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
		};
	};


    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
            layers = <0>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <16 17 18>;
        };
    };

	keymap {
		compatible = "zmk,keymap";
		// Base alpha layer
		default_layer {
			label = "Base";
			bindings = <
			&kp Q &kp W &kp E &kp R &kp T           &kp Y &kp U  &kp I     &kp O   &kp P 
			&kp A &kp S &kp D &kp F &kp G           &kp H &kp J  &kp K     &kp L &kp IT_OGRV
			&kp Z &kp X &kp C &kp V &kp B           &kp N &kp M  &kp COMMA &kp DOT &kp IT_UGRV
							&mo EXT &qt LSHIFT SPACE           &kp SPACE &sl SYM
			>;
		};

		// Numbers and high frequency symbols
		sym_layer {
			label = "Sym.";
			bindings = <
			&kp N1 &kp N2 &kp N3 &kp N4 &kp N5		                                    &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
			&kp IT_LESS &kp IT_USD &kp IT_LPAR &kp IT_LBRC &kp IT_LBKT  &kp IT_EQL &kp IT_QUES &kp IT_SQUOT &kp IT_MINUS &kp IT_AST
			&kp IT_GREAT &kp IT_PERC &kp IT_RPAR &kp IT_RBRC &kp IT_RBKT 	&kp IT_AT &kp IT_EXCL &kp IT_DQUOT &kp IT_PLUS &kp IT_FSLH
														&mo FNC  &mo SYM2       &trans &trans
			>;
		};

		// Main modifiers and arrow keys
		ext_layer {
			label = "Mods";
			bindings = <
			&kp ESC  &kp C_PREV &kp C_PP  &kp C_NEXT  &kp C_PAUSE    	&kp PG_UP  &kp HOME &kp UP &kp END &kp CAPS
			&sk LALT &sk LGUI  &sk LSHIFT  &sk LCTRL  &kp RALT 			&kp PG_DN &kp LEFT  &kp DOWN  &kp RIGHT   &kp DEL
			&kp LC(Z)  &kp LC(X) &kp LC(C) &kp TAB   &kp LC(V)          &kp LC(BSPC) &kp BSPC &trans &trans  &trans
																		&trans &kp LCTRL    &kp ENTER  &mo FNC 
			>;
		};

		// Function keys with modifiers
		fnc_layer {
			label = "FRow";
			bindings = <
			&kp F1 &kp F2 &kp F3 &kp F4 &kp F5                  &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 
			&sk LALT &sk LGUI &sk LSHIFT &sk LCTRL &kp RALT     &kp F11 &kp F12  &kp PRINTSCREEN &trans &trans
			&none &none &none &none &none				          &none &none &none &none &none 
							  &none &none              &none &none  
			>;
		};

		// Low frequency symbols.
		symbols_2_layer {
			label = "Sym.2";
			bindings = <
			&kp IT_CARET &kp IT_UNDER &kp IT_PND &kp IT_EUR &kp IT_HASH         &none &none &none &none &none 
			&kp IT_BKTK &kp IT_TILDE &kp IT_BSLH &kp IT_PIPE &kp IT_AND         &none &none &none &none &none
			&none 			&none 			 &kp IT_SECT &kp IT_CCED &kp IT_DEG				  &none &none &none &none &none
																	&none &none        	&none &none 
			>;
		};

		// Used to type regional accents.
		accent_layer {
			label = "Accent";
			bindings = <
			&none &none &none &kp IT_CEGR &none                         &none &none &none &none &none 
			&kp IT_AGRV &kp IT_IGRV &kp IT_OGRV &kp IT_EGRV &kp IT_EACU &none &none &none &none &none
			&none &none &none &kp IT_UGRV &none                         &none &none &none &none &none
									&none &none                         &none &none 
			>;
		};

		// Used to change the keyboard's settings.
		settings_layer {
				label = "Sett.";
				bindings = <
				&bootloader &none &none &bt BT_CLR &bt BT_SEL 0               &bt BT_SEL 3 &none &unstick &none &bootloader 
				&none &none &none &none      &bt BT_SEL 1 						  &bt BT_SEL 4 &none &none &none &none
				&studio_unlock &none &none &none      &bt BT_SEL 2               &bt BT_SEL 5 &none &none &none &studio_unlock
										&none &none                         &none &none 
				>;
		};
	};
};
